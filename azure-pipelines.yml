trigger:
  - main

stages:
  - stage: Build
    displayName: Build Package
    jobs:
    - job: BuildPackage
      pool: AzureDevOpsAgent01
      steps:
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: 
           Get-ChildItem -Path "$(Pipeline.Workspace)\drop\" -Include *.nupkg -file -Recurse | foreach { $_.Delete()}
         
      - task: UiPathPack@2
        inputs:
          versionType: 'AutoVersion'
          projectJsonPath: '$(Build.SourcesDirectory)\project.json'
          outputType: 'Process'
          orchestratorConnection: 'AzureDevOpsSCC'
          outputPath: '$(Build.ArtifactStagingDirectory)'
      - publish: $(Build.ArtifactStagingDirectory)
        artifact: drop


#- task: UiPathPack@2
#  inputs:
    #versionType: AutoVersion # Options: AutoVersion, CurrentVersion, ManualVersion 
    #version: '1.0.0' # Required when versionType == ManualVersion
    #projectJsonPath: '$(Build.SourcesDirectory)\MyFirstProcess'
    #outputPath: '$(Build.ArtifactStagingDirectory)\Packages\MyFirstProcess'
    #outputType: 'None' # Options: Process, Library, Tests, Objects, None
    #runWorkflowAnalysis: 'False'
    #orchestratorConnection: 'service-connection-name' # Service connection to UiPath Orchestrator,
    #traceLevel: 'None' # Options: Critical, Error, Warning, Information, Verbose, None

  - stage: Assets
    displayName: Create Assets
    jobs:
    - job: CreateAssets
      pool: AzureDevOpsAgent01
      steps:
         
      - task: UiPathAssets@2
        inputs:
          orchestratorConnection: 'AzureDevOpsSCC'
          folderName: 'Non-Production/RPA CoE'
          assetActionType: 'Deploy'
          csvFile: '$(Build.SourcesDirectory)\Data\Assets.csv'


#- task: UiPathAssets@2
 # displayName: 'Deploy/Update assets'
  #inputs:
    #orchestratorConnection: 'service-connection-name' # Service connection to UiPath Orchestrator
    #assetActionType: 'Deploy' # Options: Deploy, Delete
    #csvFile: 'assets_deploy.csv' # the path to the csv file containing the assets description,
    #traceLevel: 'None' # Options: Critical, Error, Warning, Information, Verbose, None

  - stage: Deploy
    displayName: Deploy Artifact into development Tenant
    dependsOn: Build
    condition: succeeded()
    jobs:
    - deployment: deploy
      displayName: Deploy Package to development Tenant
      pool: AzureDevOpsAgent01
      environment: CAG_Development
      strategy:
       runOnce:
        deploy:
         steps:
         - task: UiPathDeploy@2
           inputs:
            orchestratorConnection: 'AzureDevOpsSCC'
            packagesPath: '$(Pipeline.Workspace)\drop\'
            folderName: 'Non-Production/RPA CoE'


#- task: UiPathDeploy@2
#  inputs:
    #orchestratorConnection: # Service connection to UiPath Orchestrator
    #packagesPath: '$(Build.ArtifactStagingDirectory)\Packages\ITAutomationProcess'
    #folderName: 'ITAutomation'
    #environments: 'AutomationRobots' # Optional,
    #traceLevel: 'None' # Options: Critical, Error, Warning, Information, Verbose, None

  - stage: WorkflowAnalyser
    displayName: RunWorkflow Analyser
    dependsOn: Build
    condition: succeeded()
    jobs:
        - job: WorkflowAnalyser
          displayName: AnalyseProject Using Workflow Cli
          pool: AzureDevOpsAgent01
          steps:
          - task: PowerShell@2
            inputs:
              targetType: filePath
              filePath: $(Build.SourcesDirectory)\Data\Workflow-Analyzer-CLI-Script.ps1
              arguments: > # Use this to avoid newline characters in multiline string
                -ProjectFilePath $(Build.SourcesDirectory)\project.json
                -ExecutableFilePath "C:\Users\ASUSGR8II\AppData\Local\Programs\UiPath\Studio\UiPath.Studio.CommandLine.exe"
                -OutputFilePath '$(Pipeline.Workspace)\drop\Workflow-Analysis.json'
              workingDirectory: $(Build.SourcesDirectory)
            displayName: 'Analyse Project'